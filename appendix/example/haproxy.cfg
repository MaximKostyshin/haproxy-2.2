# Пример использования фильтра placemark (web-сервер работает по htts) и haproxy Proxy Protocol (для проброса IP клиента)
# Логика:
# Если при https-соединении не используется avtunproxy, то haproxy перенаправляет на 10.0.3.161:443 (bign)
# Если обнаружено использование avtunproxy, то в haproxy обрабатывается tls-соединение (bign) avtunporxy (backend be_loopback, frontend fe_loopback) и браузер tls-соединение с сервером 10.0.3.161:444 (RSA)

# Работает без avtunproxy в браузере, поддерживающем белорусскую криптографию
# Работает с avtunproxy в любом браузере. 

# ДЛЯ РАБОТЫ ПРИМЕРА НЕОБХОДИМО на клиенте загрузить:
# 1. ОБЯЗАТЕЛЬНО. Для корректной работы avtunproxy - с dev.avest.by 
#    STEND Корневой удостоверяющий центр ГосСУОК (сертификат)
#    STEND Корневой удостоверяющий центр ГосСУОК (СОС)
# 2. Для корректной работы браузера - корневой cертификат

global
	log /dev/log    local0
	log /dev/log	local1 notice
	chroot /opt/haproxy
	stats socket /opt/haproxy/run/haproxy-admin.sock mode 600 level admin
	stats timeout 30s
#	user haproxy
#	group haproxy
	daemon

	# Default SSL material locations
#	ca-base /opt/haproxy/ssl/certs
#	crt-base /opt/haproxy/ssl/private

        issuers-chain-path /opt/haproxy/ssl/certs

	tune.ssl.default-dh-param 2048

defaults
	mode http
	balance roundrobin
	option http-server-close
	option abortonclose
	option dontlognull
	option redispatch

	timeout check           3s
	timeout client          30s  # Client and server timeout must match the longest
	timeout connect         5s
	timeout http-keep-alive 5s
	timeout http-request    10s  # A complete request may never take that long.
	timeout queue           1m   # Don't queue requests too long if saturated.
	timeout server          10s  # Time we may wait for a response from the server.

	retries 3

	log global
	option tcplog

frontend http_in
	mode http
	bind *:80
	option forwardfor header X-Real-IP # ONLY mode http
	default_backend http_out

backend http_out
	mode http
	balance roundrobin
	server node_http_10_0_3_161 10.0.3.161:80 send-proxy-v2

frontend https_in
	mode tcp
	bind *:443
	tcp-request inspect-delay 5s
	tcp-request content accept if { req.ssl_hello_type 1 }	

	# проверка наличия в обрабатываемых данных подстроки AVTLSPROXY - признак использования avtunproxy
	acl find_AVTLSPROXY payload(0,10) -m bin 4156544c5350524f5859 # AVTLSPROXY
	
	# использование фильтра placemark - удаление из обрабатываемых данных подстроки AVTLSPROXY (если подстроки не было, то ничего и не удаляется)
	filter placemark remove-label

	# начало цикла обработки в случае, если обнаружено использование avtunproxy
	use_backend be_loopback if find_AVTLSPROXY

	# обработка, если НЕ обнаружено использование avtunproxy
	default_backend https_out

# обработка, если НЕ обнаружено использование avtunproxy
backend https_out
	mode tcp
	balance roundrobin
	# send-proxy-v2 используем при передаче haproxy Proxy Protocol
	server node_https_def 10.0.3.161:443 send-proxy-v2

# дальнейшее используется при обработке в случае обнаружения использования avtunproxy
backend be_loopback
	mode tcp
	balance roundrobin
	# send-proxy-v2 используем при передаче haproxy Proxy Protocol
	server loopback_tls abns@avtunproxy send-proxy-v2

frontend fe_loopback
	mode tcp
	# обработка tls-соединения, организованного avtunproxy, с белорусскими криптоалгоритмами (цепочка сертификатов сервера и личный ключ в файле maxk.avest.by.pem)
	# access-proxy используем при приеме haproxy Proxy Protocol
        # файл /opt/haproxy/ssl/private/server.pem - сертификат сервера и личный ключ (может отсутствовать) и цепочка сертификатов (может отсутствовать)
        #  файл с личным ключом (если отсутствует в opt/haproxy/ssl/private/server.pem) - см. в файле /opt/haproxy/ssl/private/server.pem.key 
        #   личный ключ должен быть либо в расшированном виде (BEGIN PRIVATE KEY), либо зашифрован (BEGIN ENCRYPTED PRIVATE KEY) на пароле, содержащемся в переменной RNG_PASSPHRASE
        #   в примере личный ключ зашифрован (пароль - 12345678)
        #  файл с цепочкой (если отсутствует в opt/haproxy/ssl/private/server.pem) - см. в параметре issuers-chain-path каталог файлов с цепочками сертификатов
	bind abns@avtunproxy ssl crt /opt/haproxy/ssl/private/server_example.pem accept-proxy
	default_backend https_out_rsa

backend https_out_rsa
	mode tcp
	balance roundrobin
	# send-proxy-v2 используем при передаче haproxy Proxy Protocol
	server node_https 10.0.3.161:444 send-proxy-v2
